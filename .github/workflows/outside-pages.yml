# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    env:
      REPO: zkamvar/CardTrick
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with: 
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          # optional: owner not needed IF the app has access to the repo running the workflow
          #   if you get 'RequestError [HttpError]: Not Found 404', pass in owner
          owner: ${{ github.repository_owner }}
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - name: List Installed apps
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          readarray -t ari < \
          <(curl --request GET \
          --header "Accept: application/vnd.github+json" \
          --header "Authorization: Bearer ${{ env.GH_TOKEN }}" \
          --header "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/installation/repositories?per_page=100 \
          | jq -r .repositories[].full_name)
          tmp=$(mktemp)
          for repo in "${ari[@]}"
          do
            gh repo clone $repo $repo -- --depth=1
            cd $repo
            timestamp=$(date)
            head='
            <!DOCTYPE html>
            <html lang="en">
            <head>
              <title>Generated Page</title>
              <meta charset="utf-8" />
              <!-- other meta, CSS, and custom tags -->
            </head>
             
            <body>
              <header>Generated Content</header>
             
              <main>
                <h1>Content From ${{ env.REPO }}</h1>
                <p>
            '
            body=${date}'<br>'$(cat README.md)'</p>'
            code='<pre><code>'$(cat *.r)'</pre></code>'
            end='
              </main>
             
              <footer>Site Footer</footer>
            </body>
            </html>
            '
            echo "${head}${body}${code}${end}" > ${tmp}
            cat ${tmp}
            git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
            git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'
            CURR_HEAD=$(git rev-parse HEAD)
            git checkout --orphan gh-pages
            git add -A
            git commit -m "source commit: ${CURR_HEAD}"
            ls -A | grep -v '^.git$' | xargs -I _ rm -r '_'
            cp ${tmp} index.html
            git add -A
            git commit --allow-empty -m "auto commit"
            git push --repo=https://${{ steps.app-token.outputs.token }}@github.com/${repo}.git -u --force --set-upstream origin gh-pages
            cd -
          done
      # - name: Checkout
      #   uses: actions/checkout@v4
      #   with:
      #     repository: ${{ env.REPO }}
      #     token: ${{ steps.app-token.outputs.token }}
      #     path: my-repo
      # - name: Glue Stuff
      #   run: |
      # - name: Setup Pages
      #   uses: actions/configure-pages@v5
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     # Upload entire repository
      #     path: '.'
