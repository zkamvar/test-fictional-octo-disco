# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    env:
      REPO: zkamvar/CardTrick
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with: 
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          # optional: owner not needed IF the app has access to the repo running the workflow
          #   if you get 'RequestError [HttpError]: Not Found 404', pass in owner
          owner: ${{ github.repository_owner }}
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" | jq -r .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Echo build params
        run:
          echo "build_version: ${{ env.GITHUB_SHA }}"
      - name: Process installed apps
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          SLUG: ${{ steps.app-token.outputs.app-slug }}
          ID: ${{ steps.get-user-id.outputs.user-id }}
          CONTEXT: ${{ toJSON(github.event) }}
        run: bash ${{ github.workspace }}/.github/workflows/so-fet.sh
        
      # - name: Checkout
      #   uses: actions/checkout@v4
      #   with:
      #     repository: ${{ env.REPO }}
      #     token: ${{ steps.app-token.outputs.token }}
      #     path: my-repo
      # - name: Glue Stuff
      #   run: |
      # - name: Setup Pages
      #   uses: actions/configure-pages@v5
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     # Upload entire repository
      #     path: '.'
